{"version":3,"sources":["components/banner.js","components/itemForm.js","components/item.js","components/itemList.js","hook/formHooks.js","hook/itemHooks.js","hook/searchBarHooks.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","display","breakpoints","up","spacing","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","Banner","props","classes","className","root","AppBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","value","searchValue","input","onChange","searchHandler","inputProps","ItemForm","Paper","style","margin","Grid","container","xs","md","item","paddingRight","TextField","inputValue","onInputChange","onKeyPress","onInputKeyPress","fullWidth","Button","onClick","onButtonClick","Item","key","id","draggableId","index","provided","Slide","direction","in","timeout","mountOnEnter","unmountOnExit","ListItem","divider","ref","innerRef","draggableProps","dragHandleProps","Checkbox","onCheckBoxToggle","checked","text","onEditItem","ListItemSecondaryAction","IconButton","onTrashClick","ItemList","items","length","List","overflow","map","todo","onItemRemove","onItemCheck","e","onEdit","useFormHooks","initialValue","useState","setValue","clearValue","changeValue","target","onEnterKey","event","callback","keyCode","which","useItemHooks","setItems","setSearch","idNum","setIdNum","addItem","trim","newItems","concat","checkItem","checkMap","list","removeItem","removeFilter","filter","searchItem","searchTgt","toLowerCase","includes","editItem","editMap","useSearchBarHooks","searchBar","setSearchBar","clearSearchBar","App","clearFormAddItem","onDragEnd","result","console","log","destination","source","startIndex","endIndex","splice","removed","reorder","droppableId","droppableProps","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb31857c.chunk.js","sourcesContent":["import React from \"react\";\nimport { AppBar, Toolbar, Typography, InputBase } from \"@material-ui/core\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\n\n// material ui banner, adapted from https://material-ui.com/components/app-bar/\nconst useStyles = makeStyles(theme => ({\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\"\n    },\n    marginLeft: theme.spacing(5)\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25)\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: theme.spacing(50)\n    }\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  inputRoot: {\n    color: \"inherit\"\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: 120,\n      \"&:focus\": {\n        width: 200\n      }\n    }\n  }\n}));\n\nconst Banner = props => {\n  const classes = useStyles();\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Todo List\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Searchâ€¦\"\n              value={props.searchValue}\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput\n              }}\n              onChange = {props.searchHandler}\n              inputProps={{ \"aria-label\": \"search\" }}\n            />\n          </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React from \"react\";\nimport { TextField, Paper, Button, Grid } from \"@material-ui/core\";\n\n// used Grid to do the button placement\nconst ItemForm = props => (\n  <Paper style={{ margin: 16, padding: 16 }}>\n    <Grid container>\n      <Grid xs={10} md={11} item style={{ paddingRight: 16 }}>\n        <TextField\n          placeholder=\"Add Todo here\"\n          value={props.inputValue}\n          onChange={props.onInputChange}\n          onKeyPress={props.onInputKeyPress}\n          fullWidth\n        />\n      </Grid>\n      <Grid xs={2} md={1} item>\n        <Button\n          fullWidth\n          color=\"secondary\"\n          variant=\"outlined\"\n          onClick={props.onButtonClick}\n        >\n          Add\n        </Button>\n      </Grid>\n    </Grid>\n  </Paper>\n);\n\nexport default ItemForm;\n","import React from \"react\";\nimport {\n  ListItem,\n  Checkbox,\n  IconButton,\n  ListItemSecondaryAction,\n  InputBase,\n  Slide\n} from \"@material-ui/core\";\nimport DeleteOutlined from \"@material-ui/icons/DeleteOutlined\";\nimport { Draggable } from \"react-beautiful-dnd\";\n\nconst Item = props => {\n  return (\n    <Draggable key={props.id} draggableId={props.id} index={props.index}>\n      {provided => (\n        <Slide\n          direction=\"up\"\n          in={true}\n          timeout={250}\n          mountOnEnter\n          unmountOnExit\n        >\n          <ListItem\n            divider={props.divider}\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n          >\n            <Checkbox\n              onClick={props.onCheckBoxToggle}\n              checked={props.checked}\n            />\n            <InputBase\n              value={props.text}\n              onChange={props.onEditItem}\n              fullWidth\n            ></InputBase>\n            <ListItemSecondaryAction>\n              <IconButton onClick={props.onTrashClick}>\n                <DeleteOutlined />\n              </IconButton>\n            </ListItemSecondaryAction>\n          </ListItem>\n        </Slide>\n      )}\n    </Draggable>\n  );\n};\n\nexport default Item;\n","import React from \"react\";\nimport Item from \"./item\";\nimport List from \"@material-ui/core/List\";\n\nconst ItemList = props => {\n  return (\n    <div className=\"itemList\">\n      {props.items.length > 0 && (\n        <List style={{ overflow: \"scroll\" }}>\n          {props.items.map((todo, index) => (\n            <Item\n              text={todo.text}\n              checked={todo.checked}\n              id={todo.id}\n              key={todo.id}\n              index={index}\n              divider={index !== props.items.length - 1}\n              onTrashClick={() => props.onItemRemove(index)}\n              onCheckBoxToggle={() => props.onItemCheck(index)}\n              onEditItem={e => props.onEdit(index, e)}\n            />\n          ))}\n        </List>\n      )}\n    </div>\n  );\n};\n\nexport default ItemList;\n","import { useState } from \"react\";\n\nexport const useFormHooks = (initialValue = \"\") => {\n  const [value, setValue] = useState(initialValue);\n\n  return {\n    value,\n    clearValue: () => setValue(\"\"),\n    changeValue: e => setValue(e.target.value),\n    onEnterKey: (event, callback) => {\n      // handle enter presses\n      if (event.keyCode === 13 || event.which === 13) {\n        callback(event);\n        return true;\n      }\n      return false;\n    }\n  };\n};\n","import { useState } from \"react\";\n\nexport const useItemHooks = (initialValue = []) => {\n  const [items, setItems] = useState(initialValue);\n  // set initial value of search to items\n  const [search, setSearch] = useState(items);\n  // id for drag and drop\n  const [idNum, setIdNum] = useState(0);\n\n  return {\n    items,\n    setItems,\n    search,\n    setSearch,\n    // add item hook\n    addItem: text => {\n      if (text.trim() !== \"\") {\n        const id = `item-${idNum}`;\n        const newItems = items.concat({\n          id,\n          text,\n          checked: false\n        });\n        setItems(newItems);\n        // refresh search after adding in new items\n        // console.log(newItems);\n        setSearch(newItems);\n        // increment id\n        setIdNum(idNum + 1);\n      }\n    },\n\n    // listener for checkbox\n    checkItem: id => {\n      const checkMap = list => {\n        const newList = list.map((item, index) => {\n          if (id === index) {\n            item.checked = !item.checked;\n          }\n          return item;\n        });\n        return newList;\n      };\n\n      setItems(checkMap(items));\n\n      setSearch(checkMap(search));\n    },\n\n    // listener for remove item\n    removeItem: id => {\n      const removeFilter = list => {\n        return list.filter((item, index) => id !== index);\n      };\n      // const newItems = items.filter((item, index) => id !== index);\n      // setItems(newItems);\n      // setSearch(newItems);\n      setItems(removeFilter(items));\n      setSearch(removeFilter(search));\n    },\n\n    // listener for search bar\n    searchItem: e => {\n      const searchTgt = e.target.value;\n      // set search to empty array first\n      if (searchTgt === \"\") {\n        // empty search, add everything\n        setSearch(items);\n      } else {\n        // else go through items and only add unique items that matches\n        setSearch(\n          items.filter(item =>\n            item.text.toLowerCase().includes(searchTgt.toLowerCase())\n          )\n        );\n      }\n    },\n\n    // listener for edit\n    editItem: (id, value) => {\n      const editMap = list => {\n        return list.map((item, index) => {\n          if (id === index) {\n            item.text = value;\n          }\n          return item;\n        });\n      };\n      setItems(editMap(items));\n      setSearch(editMap(search));\n    }\n  };\n};\n","import { useState } from \"react\"\n\nexport const useSearchBarHooks = (initialValue = \"\") => {\n    const [searchBar, setSearchBar] = useState(initialValue);\n\n    return {\n        searchBar,\n        clearSearchBar: () => setSearchBar(\"\"),\n        setSearchBar,\n    }\n}","import React from \"react\";\nimport Banner from \"./components/banner\";\nimport ItemForm from \"./components/itemForm\";\nimport ItemList from \"./components/itemList\";\nimport { useFormHooks } from \"./hook/formHooks\";\nimport { useItemHooks } from \"./hook/itemHooks\";\nimport { useSearchBarHooks} from \"./hook/searchBarHooks\"\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nfunction App() {\n  const {\n    items,\n    setItems,\n    search,\n    setSearch,\n    addItem,\n    checkItem,\n    removeItem,\n    searchItem,\n    editItem\n  } = useItemHooks();\n  const { value, clearValue, changeValue, onEnterKey } = useFormHooks();\n  const { searchBar, clearSearchBar, setSearchBar } = useSearchBarHooks();\n\n  // clears add form and adds item into list\n  // additionally, clear search\n  const clearFormAddItem = () => {\n    clearValue();\n    clearSearchBar();\n    addItem(value);\n  };\n\n  const searchItemUpdateValue = e => {\n    setSearchBar(e.target.value);\n    searchItem(e);\n  }\n\n  const reorder = (list, startIndex, endIndex) => {\n    console.log(list);\n    const [removed] = list.splice(startIndex, 1);\n    list.splice(endIndex, 0, removed);\n    return list;\n  };\n\n  const onDrag = result => {\n    console.log(result);\n    // dragged out of bounds\n    if (!result.destination) {\n      return;\n    }\n\n    // no changes to index\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const newItems = reorder(\n      items,\n      result.source.index,\n      result.destination.index\n    );\n\n    setItems(newItems);\n    setSearch(newItems);\n  };\n\n  return (\n    <div>\n      <Banner searchHandler={searchItemUpdateValue} searchValue={searchBar}/>\n      <ItemForm\n        inputValue={value}\n        onInputChange={changeValue}\n        onInputKeyPress={event => onEnterKey(event, clearFormAddItem)}\n        onButtonClick={clearFormAddItem}\n      />\n      <DragDropContext onDragEnd={onDrag}>\n        <Droppable droppableId=\"list\">\n          {provided => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              <ItemList\n                items={search}\n                onItemRemove={id => removeItem(id)}\n                onItemCheck={id => checkItem(id)}\n                onEdit={(id, event) => editItem(id, event.target.value)}\n              />\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}