{"ast":null,"code":"import _slicedToArray from \"/Users/jerry/Projects/Web/ToDo/todo/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jerry/Projects/Web/ToDo/todo/src/App.js\";\nimport React from \"react\";\nimport Banner from \"./components/banner\";\nimport ItemForm from \"./components/itemForm\";\nimport ItemList from \"./components/itemList\";\nimport { useFormHooks } from \"./hook/formHooks\";\nimport { useItemHooks } from \"./hook/itemHooks\";\nimport { useSearchBarHooks } from \"./hook/searchBarHooks\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nfunction App() {\n  const _useItemHooks = useItemHooks(),\n        items = _useItemHooks.items,\n        setItems = _useItemHooks.setItems,\n        search = _useItemHooks.search,\n        setSearch = _useItemHooks.setSearch,\n        addItem = _useItemHooks.addItem,\n        checkItem = _useItemHooks.checkItem,\n        removeItem = _useItemHooks.removeItem,\n        searchItem = _useItemHooks.searchItem,\n        editItem = _useItemHooks.editItem;\n\n  const _useFormHooks = useFormHooks(),\n        value = _useFormHooks.value,\n        clearValue = _useFormHooks.clearValue,\n        changeValue = _useFormHooks.changeValue,\n        onEnterKey = _useFormHooks.onEnterKey;\n\n  const _useSearchBarHooks = useSearchBarHooks(),\n        searchBar = _useSearchBarHooks.searchBar,\n        clearSearchBar = _useSearchBarHooks.clearSearchBar,\n        setSearchBar = _useSearchBarHooks.setSearchBar; // clears add form and adds item into list\n  // additionally, clear search\n\n\n  const clearFormAddItem = () => {\n    clearValue();\n    clearSearchBar();\n    addItem(value);\n  };\n\n  const searchItemUpdateValue = e => {\n    setSearchBar(e.target.value);\n    searchItem(e);\n  };\n\n  const reorder = (list, startIndex, endIndex) => {\n    console.log(list);\n\n    const _list$splice = list.splice(startIndex, 1),\n          _list$splice2 = _slicedToArray(_list$splice, 1),\n          removed = _list$splice2[0];\n\n    list.splice(endIndex, 0, removed);\n    return list;\n  };\n\n  const onDrag = result => {\n    console.log(result); // dragged out of bounds\n\n    if (!result.destination) {\n      return;\n    } // no changes to index\n\n\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const newItems = reorder(items, result.source.index, result.destination.index);\n    setItems(newItems);\n    setSearch(newItems);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Banner, {\n    searchHandler: searchItemUpdateValue,\n    searchValue: searchValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(ItemForm, {\n    inputValue: value,\n    onInputChange: changeValue,\n    onInputKeyPress: event => onEnterKey(event, clearFormAddItem),\n    onButtonClick: clearFormAddItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(DragDropContext, {\n    onDragEnd: onDrag,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Droppable, {\n    droppableId: \"list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, provided => React.createElement(\"div\", Object.assign({\n    ref: provided.innerRef\n  }, provided.droppableProps, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(ItemList, {\n    items: search,\n    onItemRemove: id => removeItem(id),\n    onItemCheck: id => checkItem(id),\n    onEdit: (id, event) => editItem(id, event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), provided.placeholder))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/jerry/Projects/Web/ToDo/todo/src/App.js"],"names":["React","Banner","ItemForm","ItemList","useFormHooks","useItemHooks","useSearchBarHooks","DragDropContext","Droppable","App","items","setItems","search","setSearch","addItem","checkItem","removeItem","searchItem","editItem","value","clearValue","changeValue","onEnterKey","searchBar","clearSearchBar","setSearchBar","clearFormAddItem","searchItemUpdateValue","e","target","reorder","list","startIndex","endIndex","console","log","splice","removed","onDrag","result","destination","index","source","newItems","searchValue","event","provided","innerRef","droppableProps","id","placeholder"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Banner from \"./components/banner\";\nimport ItemForm from \"./components/itemForm\";\nimport ItemList from \"./components/itemList\";\nimport { useFormHooks } from \"./hook/formHooks\";\nimport { useItemHooks } from \"./hook/itemHooks\";\nimport { useSearchBarHooks} from \"./hook/searchBarHooks\"\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\n\nfunction App() {\n  const {\n    items,\n    setItems,\n    search,\n    setSearch,\n    addItem,\n    checkItem,\n    removeItem,\n    searchItem,\n    editItem\n  } = useItemHooks();\n  const { value, clearValue, changeValue, onEnterKey } = useFormHooks();\n  const { searchBar, clearSearchBar, setSearchBar } = useSearchBarHooks();\n\n  // clears add form and adds item into list\n  // additionally, clear search\n  const clearFormAddItem = () => {\n    clearValue();\n    clearSearchBar();\n    addItem(value);\n  };\n\n  const searchItemUpdateValue = e => {\n    setSearchBar(e.target.value);\n    searchItem(e);\n  }\n\n  const reorder = (list, startIndex, endIndex) => {\n    console.log(list);\n    const [removed] = list.splice(startIndex, 1);\n    list.splice(endIndex, 0, removed);\n    return list;\n  };\n\n  const onDrag = result => {\n    console.log(result);\n    // dragged out of bounds\n    if (!result.destination) {\n      return;\n    }\n\n    // no changes to index\n    if (result.destination.index === result.source.index) {\n      return;\n    }\n\n    const newItems = reorder(\n      items,\n      result.source.index,\n      result.destination.index\n    );\n\n    setItems(newItems);\n    setSearch(newItems);\n  };\n\n  return (\n    <div>\n      <Banner searchHandler={searchItemUpdateValue} searchValue={searchValue}/>\n      <ItemForm\n        inputValue={value}\n        onInputChange={changeValue}\n        onInputKeyPress={event => onEnterKey(event, clearFormAddItem)}\n        onButtonClick={clearFormAddItem}\n      />\n      <DragDropContext onDragEnd={onDrag}>\n        <Droppable droppableId=\"list\">\n          {provided => (\n            <div ref={provided.innerRef} {...provided.droppableProps}>\n              <ItemList\n                items={search}\n                onItemRemove={id => removeItem(id)}\n                onItemCheck={id => checkItem(id)}\n                onEdit={(id, event) => editItem(id, event.target.value)}\n              />\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n      </DragDropContext>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}