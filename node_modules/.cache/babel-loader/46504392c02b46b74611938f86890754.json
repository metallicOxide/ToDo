{"ast":null,"code":"var _jsxFileName = \"/Users/jerry/Projects/Web/ToDo/todo/src/App.js\";\nimport React from \"react\";\nimport Banner from \"./components/banner\";\nimport ItemForm from \"./components/itemForm\";\nimport { useFormHooks } from \"./hook/formHooks\";\nimport { useItemHooks } from \"./hook/itemHooks\";\nimport ItemList from \"./components/itemList\";\n\nfunction App() {\n  const _useFormHooks = useFormHooks(),\n        value = _useFormHooks.value,\n        clearValue = _useFormHooks.clearValue,\n        changeValue = _useFormHooks.changeValue,\n        onEnterKey = _useFormHooks.onEnterKey;\n\n  const _useFormHooks2 = useFormHooks(),\n        searchValue = _useFormHooks2.searchValue,\n        clearSearch = _useFormHooks2.clearSearch,\n        changeSearch = _useFormHooks2.changeSearch,\n        onEnterSearch = _useFormHooks2.onEnterSearch;\n\n  const _useItemHooks = useItemHooks(),\n        items = _useItemHooks.items,\n        search = _useItemHooks.search,\n        addItem = _useItemHooks.addItem,\n        checkItem = _useItemHooks.checkItem,\n        removeItem = _useItemHooks.removeItem,\n        updateSearch = _useItemHooks.updateSearch,\n        searchItem = _useItemHooks.searchItem,\n        editItem = _useItemHooks.editItem;\n\n  const clearFormAddItem = () => {\n    addItem(value);\n    console.log(\"In wrapper function\");\n    console.log(items);\n    clearValue();\n  };\n\n  const clearFormSearch = () => {\n    searchItem(searchValue);\n    clearSearch();\n  }; // const addUpdateSearch = () => {\n  //   addItem(value);\n  //   updateSearch(items);\n  // }\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Banner, {\n    searchHandler: searchItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(ItemForm, {\n    inputValue: value,\n    onInputChange: changeValue,\n    onInputKeyPress: event => onEnterKey(event, clearFormAddItem),\n    onButtonClick: clearFormAddItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(ItemList, {\n    items: search,\n    onItemRemove: id => removeItem(id),\n    onItemCheck: id => checkItem(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }));\n}\n\nexport default App; // import { useInputValue, useTodos } from \"./custom-hooks\";\n// import Layout from \"./components/Layout\";\n// import AddTodo from \"./components/AddTodo\";\n// import TodoList from \"./components/TodoList\";\n// const TodoApp = memo(props => {\n//   const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n//   const { todos, addTodo, checkTodo, removeTodo } = useTodos();\n//   const clearInputAndAddTodo = _ => {\n//     clearInput();\n//     addTodo(inputValue);\n//   };\n//   return (\n//     <Layout>\n//       <AddTodo\n//         inputValue={inputValue}\n//         onInputChange={changeInput}\n//         onButtonClick={clearInputAndAddTodo}\n//         onInputKeyPress={event => keyInput(event, clearInputAndAddTodo)}\n//       />\n//       <TodoList\n//         items={todos}\n//         onItemCheck={idx => checkTodo(idx)}\n//         onItemRemove={idx => removeTodo(idx)}\n//       />\n//     </Layout>\n//   );\n// });\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<TodoApp />, rootElement);","map":{"version":3,"sources":["/Users/jerry/Projects/Web/ToDo/todo/src/App.js"],"names":["React","Banner","ItemForm","useFormHooks","useItemHooks","ItemList","App","value","clearValue","changeValue","onEnterKey","searchValue","clearSearch","changeSearch","onEnterSearch","items","search","addItem","checkItem","removeItem","updateSearch","searchItem","editItem","clearFormAddItem","console","log","clearFormSearch","event","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,SAASC,YAAT,QAA6B,kBAA7B;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,GAAT,GAAe;AAAA,wBAC0CH,YAAY,EADtD;AAAA,QACLI,KADK,iBACLA,KADK;AAAA,QACEC,UADF,iBACEA,UADF;AAAA,QACcC,WADd,iBACcA,WADd;AAAA,QAC2BC,UAD3B,iBAC2BA,UAD3B;;AAAA,yBAEqDP,YAAY,EAFjE;AAAA,QAELQ,WAFK,kBAELA,WAFK;AAAA,QAEQC,WAFR,kBAEQA,WAFR;AAAA,QAEqBC,YAFrB,kBAEqBA,YAFrB;AAAA,QAEmCC,aAFnC,kBAEmCA,aAFnC;;AAAA,wBAYTV,YAAY,EAZH;AAAA,QAIXW,KAJW,iBAIXA,KAJW;AAAA,QAKXC,MALW,iBAKXA,MALW;AAAA,QAMXC,OANW,iBAMXA,OANW;AAAA,QAOXC,SAPW,iBAOXA,SAPW;AAAA,QAQXC,UARW,iBAQXA,UARW;AAAA,QASXC,YATW,iBASXA,YATW;AAAA,QAUXC,UAVW,iBAUXA,UAVW;AAAA,QAWXC,QAXW,iBAWXA,QAXW;;AAcb,QAAMC,gBAAgB,GAAG,MAAM;AAC7BN,IAAAA,OAAO,CAACV,KAAD,CAAP;AACAiB,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACAP,IAAAA,UAAU;AACX,GALD;;AAOA,QAAMkB,eAAe,GAAG,MAAM;AAC5BL,IAAAA,UAAU,CAACV,WAAD,CAAV;AACAC,IAAAA,WAAW;AACZ,GAHD,CArBa,CA0Bb;AACA;AACA;AACA;;;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,aAAa,EAAES,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,QAAD;AACE,IAAA,UAAU,EAAEd,KADd;AAEE,IAAA,aAAa,EAAEE,WAFjB;AAGE,IAAA,eAAe,EAAEkB,KAAK,IAAEjB,UAAU,CAACiB,KAAD,EAAQJ,gBAAR,CAHpC;AAIE,IAAA,aAAa,EAAEA,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEP,MADT;AAEE,IAAA,YAAY,EAAEY,EAAE,IAAET,UAAU,CAACS,EAAD,CAF9B;AAGE,IAAA,WAAW,EAAEA,EAAE,IAAEV,SAAS,CAACU,EAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAgBD;;AAED,eAAetB,GAAf,C,CAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\nimport Banner from \"./components/banner\";\nimport ItemForm from \"./components/itemForm\";\nimport { useFormHooks } from \"./hook/formHooks\";\nimport { useItemHooks } from \"./hook/itemHooks\";\nimport ItemList from \"./components/itemList\";\n\nfunction App() {\n  const { value, clearValue, changeValue, onEnterKey } = useFormHooks();\n  const { searchValue, clearSearch, changeSearch, onEnterSearch } = useFormHooks();\n  const {\n    items,\n    search,\n    addItem,\n    checkItem,\n    removeItem,\n    updateSearch,\n    searchItem,\n    editItem\n  } = useItemHooks();\n\n  const clearFormAddItem = () => {\n    addItem(value);\n    console.log(\"In wrapper function\")\n    console.log(items)\n    clearValue();\n  };\n\n  const clearFormSearch = () => {\n    searchItem(searchValue);\n    clearSearch();\n  };\n\n  // const addUpdateSearch = () => {\n  //   addItem(value);\n  //   updateSearch(items);\n  // }\n\n  return (\n    <div>\n      <Banner searchHandler={searchItem} />\n      <ItemForm \n        inputValue={value}\n        onInputChange={changeValue}\n        onInputKeyPress={event=>onEnterKey(event, clearFormAddItem)}\n        onButtonClick={clearFormAddItem}\n      />\n      <ItemList \n        items={search}\n        onItemRemove={id=>removeItem(id)}\n        onItemCheck={id=>checkItem(id)}\n      />\n    </div>\n  );\n}\n\nexport default App;\n\n// import { useInputValue, useTodos } from \"./custom-hooks\";\n\n// import Layout from \"./components/Layout\";\n\n// import AddTodo from \"./components/AddTodo\";\n// import TodoList from \"./components/TodoList\";\n\n// const TodoApp = memo(props => {\n//   const { inputValue, changeInput, clearInput, keyInput } = useInputValue();\n//   const { todos, addTodo, checkTodo, removeTodo } = useTodos();\n\n//   const clearInputAndAddTodo = _ => {\n//     clearInput();\n//     addTodo(inputValue);\n//   };\n\n//   return (\n//     <Layout>\n//       <AddTodo\n//         inputValue={inputValue}\n//         onInputChange={changeInput}\n//         onButtonClick={clearInputAndAddTodo}\n//         onInputKeyPress={event => keyInput(event, clearInputAndAddTodo)}\n//       />\n//       <TodoList\n//         items={todos}\n//         onItemCheck={idx => checkTodo(idx)}\n//         onItemRemove={idx => removeTodo(idx)}\n//       />\n//     </Layout>\n//   );\n// });\n\n// const rootElement = document.getElementById(\"root\");\n// ReactDOM.render(<TodoApp />, rootElement);\n"]},"metadata":{},"sourceType":"module"}